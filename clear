[1mdiff --git a/src/InterfacesGraficas/VentanaRegistrarReserva.java b/src/InterfacesGraficas/VentanaRegistrarReserva.java[m
[1mindex 2095976..62840f6 100644[m
[1m--- a/src/InterfacesGraficas/VentanaRegistrarReserva.java[m
[1m+++ b/src/InterfacesGraficas/VentanaRegistrarReserva.java[m
[36m@@ -1,2 +1,343 @@[m
[31m-package InterfacesGraficas;public class VentanaRegistrarReserva {[m
[31m-}[m
[32m+[m[32mpackage InterfacesGraficas;[m
[32m+[m
[32m+[m[32mimport javax.swing.*;[m
[32m+[m[32mimport java.awt.*;[m
[32m+[m[32mimport java.awt.event.FocusAdapter;[m
[32m+[m[32mimport java.awt.event.FocusEvent;[m
[32m+[m[32mimport java.awt.event.ActionEvent;[m
[32m+[m[32mimport java.awt.event.ActionListener;[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.time.LocalTime;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport LogicaNegocio.Reserva;[m
[32m+[m[32mimport LogicaNegocio.Cliente;[m
[32m+[m[32mimport LogicaNegocio.Mesa;[m
[32m+[m
[32m+[m[32mpublic class VentanaRegistrarReserva extends JFrame {[m
[32m+[m[32m    private JTextField nombreClienteField, emailClienteField, telefonoClienteField, mesaField, idReservaField;[m
[32m+[m[32m    private JTextField capacidadField, ubicacionField, comentarioField;[m
[32m+[m[32m    private JTextField nombreClienteMalo, mesaClienteMalo, mesaClienteModifica, idReservaCancelada;[m
[32m+[m[32m    private JSpinner fechaSpinner, horaSpinner;[m
[32m+[m[32m    private JButton realizarReservaButton, modificarReservaButton, cancelarReservaButton, filtrarMesasButton;[m
[32m+[m[32m    private JTextArea resultadoFiltradoArea;[m
[32m+[m[32m    private Reserva reserva;[m
[32m+[m
[32m+[m[32m    public VentanaRegistrarReserva(Reserva reserva) {[m
[32m+[m[32m        this.reserva = reserva;[m
[32m+[m[32m        setTitle("Gesti√≥n de Reservas");[m
[32m+[m[32m        setSize(600, 400);[m
[32m+[m[32m        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);[m
[32m+[m[32m        setLocationRelativeTo(null);[m
[32m+[m
[32m+[m[32m        // Panel con pesta√±as[m
[32m+[m[32m        JTabbedPane tabbedPane = new JTabbedPane();[m
[32m+[m
[32m+[m[32m        // Panel para realizar reserva[m
[32m+[m[32m        JPanel panelRealizarReserva = crearPanelRealizarReserva();[m
[32m+[m[32m        tabbedPane.addTab("Realizar Reserva", panelRealizarReserva);[m
[32m+[m
[32m+[m[32m        // Panel para modificar reserva[m
[32m+[m[32m        JPanel panelModificarReserva = crearPanelModificarReserva();[m
[32m+[m[32m        tabbedPane.addTab("Modificar Reserva", panelModificarReserva);[m
[32m+[m
[32m+[m[32m        // Panel para cancelar reserva[m
[32m+[m[32m        JPanel panelCancelarReserva = crearPanelCancelarReserva();[m
[32m+[m[32m        tabbedPane.addTab("Cancelar Reserva", panelCancelarReserva);[m
[32m+[m
[32m+[m[32m        // Panel para filtrar mesas[m
[32m+[m[32m        JPanel panelFiltrarMesas = crearPanelFiltrarMesas();[m
[32m+[m[32m        tabbedPane.addTab("Filtrar Mesas", panelFiltrarMesas);[m
[32m+[m
[32m+[m[32m        add(tabbedPane);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Crear panel para realizar la reserva[m
[32m+[m[32m    private JPanel crearPanelRealizarReserva() {[m
[32m+[m[32m        JPanel panel = new JPanel(new GridLayout(8, 2));[m
[32m+[m
[32m+[m[32m        // Campos del formulario[m
[32m+[m[32m        panel.add(new JLabel("   Nombre:"));[m
[32m+[m[32m        nombreClienteField = new JTextField(); // Inicializa aqu√≠[m
[32m+[m[32m        nombreClienteField.setVisible(true); // Esto asegura que el campo es visible[m
[32m+[m[32m        nombreClienteField.setEnabled(true); // Esto asegura que el campo es habilitado[m
[32m+[m
[32m+[m[32m        panel.add(nombreClienteField); // Agregar el campo al panel[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   Email:"));[m
[32m+[m[32m        emailClienteField = new JTextField();[m
[32m+[m[32m        panel.add(emailClienteField);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   Tel√©fono:"));[m
[32m+[m[32m        telefonoClienteField = new JTextField();[m
[32m+[m[32m        panel.add(telefonoClienteField);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   N√∫mero de Mesa:"));[m
[32m+[m[32m        mesaField = new JTextField();[m
[32m+[m[32m        panel.add(mesaField);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   Fecha:"));[m
[32m+[m[32m        fechaSpinner = new JSpinner(new SpinnerDateModel());[m
[32m+[m[32m        JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(fechaSpinner, "yyyy-MM-dd");[m
[32m+[m[32m        fechaSpinner.setEditor(dateEditor);[m
[32m+[m[32m        panel.add(fechaSpinner);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   Hora de Inicio:"));[m
[32m+[m[32m        horaSpinner = new JSpinner(new SpinnerDateModel());[m
[32m+[m[32m        JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(horaSpinner, "HH:mm");[m
[32m+[m[32m        horaSpinner.setEditor(timeEditor);[m
[32m+[m[32m        panel.add(horaSpinner);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("   Comentarios:"));[m
[32m+[m[32m        comentarioField = new JTextField();[m
[32m+[m[32m        panel.add(comentarioField);[m
[32m+[m
[32m+[m[32m        // Bot√≥n para realizar la reserva[m
[32m+[m[32m        realizarReservaButton = new JButton("Realizar Reserva");[m
[32m+[m[32m        realizarReservaButton.addActionListener(new ActionListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void actionPerformed(ActionEvent e) {[m
[32m+[m[32m                try {[m
[32m+[m[32m                    realizarReserva();[m
[32m+[m[32m                } catch (Exception ex){[m
[32m+[m[32m                    JOptionPane.showMessageDialog(null, "Error al realizar la reserva: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        panel.add(realizarReservaButton);[m
[32m+[m
[32m+[m[32m        return panel;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©todo para realizar la reserva[m
[32m+[m[32m    public void realizarReserva() {[m
[32m+[m[32m        String nombreCliente = nombreClienteField.getText();[m
[32m+[m[32m        String emailCliente = emailClienteField.getText();[m
[32m+[m[32m        String telefonoCliente = telefonoClienteField.getText();[m
[32m+[m[32m        String numeroMesaTexto = mesaField.getText();[m
[32m+[m[32m        String comentario = comentarioField.getText();[m
[32m+[m
[32m+[m[32m        // Validaciones[m
[32m+[m[32m        if (nombreCliente.isEmpty()) {[m
[32m+[m[32m            mostrarError("El campo de nombre no puede estar vac√≠o");[m
[32m+[m[32m            return; // Detenemos el flujo si el nombre est√° vac√≠o[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!validarNombre(nombreCliente)) {[m
[32m+[m[32m            mostrarError("El nombre solo debe contener letras y espacios");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (emailCliente.isEmpty()) {[m
[32m+[m[32m            mostrarError("El campo de email no puede estar vac√≠o");[m
[32m+[m[32m            return; // Detenemos el flujo si el correo est√° vac√≠o[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (!validarEmail(emailCliente)) {[m
[32m+[m[32m            mostrarError("Correo electr√≥nico no v√°lido");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (telefonoCliente.isEmpty()) {[m
[32m+[m[32m            mostrarError("El campo de tel√©fono no puede estar vac√≠o");[m
[32m+[m[32m            return; // Detenemos el flujo si el nombre est√° vac√≠o[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (!validarTelefono(telefonoCliente)) {[m
[32m+[m[32m            mostrarError("El tel√©fono solo debe contener n√∫meros");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (!validarNumeroMesa(numeroMesaTexto)) {[m
[32m+[m[32m            mostrarError("El n√∫mero de la mesa debe ser un n√∫mero entero v√°lido");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (numeroMesaTexto.isEmpty()) {[m
[32m+[m[32m            mostrarError("Por favor ingrese un n√∫mero de mesa");[m
[32m+[m[32m            return; // Detenemos el flujo si la mesa est√° vac√≠a[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
[32m+[m[32m        // Realizar la reserva[m
[32m+[m[32m        int numeroMesa = Integer.parseInt(numeroMesaTexto);[m
[32m+[m[32m        LocalDate dia = ((SpinnerDateModel) fechaSpinner.getModel()).getDate().toInstant()[m
[32m+[m[32m                .atZone(java.time.ZoneId.systemDefault()).toLocalDate();[m
[32m+[m[32m        LocalTime horaInicio = ((SpinnerDateModel) horaSpinner.getModel()).getDate().toInstant()[m
[32m+[m[32m                .atZone(java.time.ZoneId.systemDefault()).toLocalTime();[m
[32m+[m
[32m+[m[32m        Cliente cliente = new Cliente(nombreCliente, emailCliente, telefonoCliente);[m
[32m+[m[32m        Mesa mesa = new Mesa(numeroMesa, "Terraza", 5);[m
[32m+[m
[32m+[m[32m        reserva.realizarReserva(cliente, dia, horaInicio, mesa, comentario);[m
[32m+[m
[32m+[m[32m        JOptionPane.showMessageDialog(null, "Reserva realizada con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Panel para modificar la reserva[m
[32m+[m[32m    private JPanel crearPanelModificarReserva() {[m
[32m+[m[32m        JPanel panel = new JPanel(new GridLayout(6, 2));[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("ID Reserva:"));[m
[32m+[m[32m        idReservaField = new JTextField();[m
[32m+[m[32m        panel.add(idReservaField);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Nueva Mesa:"));[m
[32m+[m[32m        mesaClienteModifica = new JTextField();[m
[32m+[m[32m        panel.add(mesaClienteModifica);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Nueva Fecha:"));[m
[32m+[m[32m        fechaSpinner = new JSpinner(new SpinnerDateModel());[m
[32m+[m[32m        JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(fechaSpinner, "yyyy-MM-dd");[m
[32m+[m[32m        fechaSpinner.setEditor(dateEditor);[m
[32m+[m[32m        panel.add(fechaSpinner);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Nueva Hora:"));[m
[32m+[m[32m        horaSpinner = new JSpinner(new SpinnerDateModel());[m
[32m+[m[32m        JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(horaSpinner, "HH:mm");[m
[32m+[m[32m        horaSpinner.setEditor(timeEditor);[m
[32m+[m[32m        panel.add(horaSpinner);[m
[32m+[m
[32m+[m[32m        modificarReservaButton = new JButton("Modificar Reserva");[m
[32m+[m[32m        modificarReservaButton.addActionListener(new ActionListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void actionPerformed(ActionEvent e) {[m
[32m+[m[32m                modificarReserva();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        panel.add(modificarReservaButton);[m
[32m+[m
[32m+[m[32m        return panel;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©todo para modificar la reserva[m
[32m+[m[32m    public void modificarReserva() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            Integer idReserva = Integer.parseInt(idReservaField.getText());[m
[32m+[m[32m            int numeroMesaModificada = Integer.parseInt(mesaClienteModifica.getText());[m
[32m+[m
[32m+[m[32m            LocalDate nuevoDia = ((SpinnerDateModel) fechaSpinner.getModel()).getDate().toInstant()[m
[32m+[m[32m                    .atZone(java.time.ZoneId.systemDefault()).toLocalDate();[m
[32m+[m[32m            LocalTime nuevaHora = ((SpinnerDateModel) horaSpinner.getModel()).getDate().toInstant()[m
[32m+[m[32m                    .atZone(java.time.ZoneId.systemDefault()).toLocalTime();[m
[32m+[m
[32m+[m[32m            Mesa nuevaMesa = new Mesa(numeroMesaModificada, "Terraza", 5);[m
[32m+[m[32m            reserva.modificarReserva(idReserva, nuevaMesa, nuevaHora, nuevoDia);[m
[32m+[m[32m            JOptionPane.showMessageDialog(null, "Reserva modificada con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            mostrarError("Error al modificar la reserva");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Panel para cancelar la reserva[m
[32m+[m[32m    private JPanel crearPanelCancelarReserva() {[m
[32m+[m[32m        JPanel panel = new JPanel(new GridLayout(4, 2));[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("ID Reserva:"));[m
[32m+[m[32m        idReservaCancelada = new JTextField();[m
[32m+[m[32m        panel.add(idReservaCancelada);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Nombre Cliente:"));[m
[32m+[m[32m        nombreClienteMalo = new JTextField();[m
[32m+[m[32m        panel.add(nombreClienteMalo);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("N√∫mero de Mesa:"));[m
[32m+[m[32m        mesaClienteMalo = new JTextField();[m
[32m+[m[32m        panel.add(mesaClienteMalo);[m
[32m+[m
[32m+[m[32m        cancelarReservaButton = new JButton("Cancelar Reserva");[m
[32m+[m[32m        cancelarReservaButton.addActionListener(new ActionListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void actionPerformed(ActionEvent e) {[m
[32m+[m[32m                cancelarReserva();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        panel.add(cancelarReservaButton);[m
[32m+[m
[32m+[m[32m        return panel;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©todo para cancelar la reserva[m
[32m+[m[32m    public void cancelarReserva() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            Integer idReservaCancel = Integer.parseInt(idReservaCancelada.getText());[m
[32m+[m[32m            String nombreClienteQueCancela = nombreClienteMalo.getText();[m
[32m+[m[32m            int numeroMesaClienteMalo = Integer.parseInt(mesaClienteMalo.getText());[m
[32m+[m
[32m+[m[32m            Cliente cliente = new Cliente(nombreClienteQueCancela, "", "");[m
[32m+[m[32m            Mesa mesa = new Mesa(numeroMesaClienteMalo, "Terraza", 5);[m
[32m+[m[32m            reserva.cancelarReserva(idReservaCancel, cliente, mesa);[m
[32m+[m[32m            JOptionPane.showMessageDialog(null, "Reserva cancelada con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            mostrarError("Error al cancelar la reserva");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Panel para filtrar mesas[m
[32m+[m[32m    private JPanel crearPanelFiltrarMesas() {[m
[32m+[m[32m        JPanel panel = new JPanel(new GridLayout(4, 2));[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Capacidad:"));[m
[32m+[m[32m        capacidadField = new JTextField();[m
[32m+[m[32m        panel.add(capacidadField);[m
[32m+[m
[32m+[m[32m        panel.add(new JLabel("Ubicaci√≥n:"));[m
[32m+[m[32m        ubicacionField = new JTextField();[m
[32m+[m[32m        panel.add(ubicacionField);[m
[32m+[m
[32m+[m[32m        resultadoFiltradoArea = new JTextArea(5, 20);[m
[32m+[m[32m        JScrollPane scrollPane = new JScrollPane(resultadoFiltradoArea);[m
[32m+[m[32m        panel.add(scrollPane);[m
[32m+[m
[32m+[m[32m        filtrarMesasButton = new JButton("Filtrar Mesas");[m
[32m+[m[32m        filtrarMesasButton.addActionListener(new ActionListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void actionPerformed(ActionEvent e) {[m
[32m+[m[32m                filtrarMesas();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        panel.add(filtrarMesasButton);[m
[32m+[m
[32m+[m[32m        return panel;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©todo para filtrar mesas[m
[32m+[m[32m    public void filtrarMesas() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            Integer capacidad = Integer.parseInt(capacidadField.getText());[m
[32m+[m[32m            String ubicacion = ubicacionField.getText();[m
[32m+[m
[32m+[m[32m            ArrayList<Mesa> mesasFiltradas = reserva.filtrarMesa(capacidad, ubicacion);[m
[32m+[m[32m            resultadoFiltradoArea.setText("");[m
[32m+[m[32m            for (Mesa mesa : mesasFiltradas) {[m
[32m+[m[32m                resultadoFiltradoArea.append(mesa.toString() + "\n");[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            mostrarError("Error al filtrar mesas");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©todos auxiliares[m
[32m+[m[32m    private boolean validarNombre(String nombre) {[m
[32m+[m[32m            nombre = nombre.trim(); //Elimina espacios[m
[32m+[m[32m            return nombre.matches("[\\p{L}\\s]+");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean validarEmail(String email) {[m
[32m+[m[32m        return email.matches("^[A-Za-z0-9+_.-]+@(.+)$");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean validarTelefono(String telefono) {[m
[32m+[m[32m        return telefono.matches("\\d+");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean validarNumeroMesa(String numeroMesaTexto) {[m
[32m+[m[32m        try {[m
[32m+[m[32m            Integer.parseInt(numeroMesaTexto);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        } catch (NumberFormatException e) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void mostrarError(String mensaje) {[m
[32m+[m[32m        JOptionPane.showMessageDialog(null, mensaje, "Error", JOptionPane.ERROR_MESSAGE);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/LogicaNegocio/Cliente.java b/src/LogicaNegocio/Cliente.java[m
[1mindex a609e87..100a180 100644[m
[1m--- a/src/LogicaNegocio/Cliente.java[m
[1m+++ b/src/LogicaNegocio/Cliente.java[m
[36m@@ -1,15 +1,28 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 import java.util.ArrayList;[m
 public class Cliente {[m
     private String nombre;[m
     private String correo;[m
[31m-    private long numero;[m
[32m+[m[32m    private String numero;[m
     private String contrasenia;[m
     private ArrayList<Reserva> listaReservas;[m
 [m
[31m-    public Cliente(){[m
[32m+[m[32m    public Cliente() {[m
         this.listaReservas = new ArrayList<Reserva>();[m
     }[m
[31m-    public Cliente(String nombre, String correo, long numero, String contrasenia, ArrayList<Reserva>listaReservas) {[m
[32m+[m[32m    public Cliente(String nombre, String correo, String numero, String contrasenia){[m
[32m+[m[32m        this.nombre = nombre;[m
[32m+[m[32m        this.correo = correo;[m
[32m+[m[32m        this.numero = numero;[m
[32m+[m[32m        this.contrasenia = contrasenia;[m
[32m+[m[32m    }[m
[32m+[m[32m    public Cliente(String nombre, String correo, String numero){[m
[32m+[m[32m        this.nombre = nombre;[m
[32m+[m[32m        this.correo = correo;[m
[32m+[m[32m        this.numero = numero;[m
[32m+[m[32m    }[m
[32m+[m[32m    public Cliente(String nombre, String correo, String numero, String contrasenia, ArrayList<Reserva>listaReservas) {[m
         this.nombre = nombre;[m
         this.correo = correo;[m
         this.numero = numero;[m
[36m@@ -33,11 +46,11 @@[m [mpublic class Cliente {[m
         this.correo = correo;[m
     }[m
 [m
[31m-    public long getNumero() {[m
[32m+[m[32m    public String getNumero() {[m
         return numero;[m
     }[m
 [m
[31m-    public void setNumero(long numero) {[m
[32m+[m[32m    public void setNumero(String numero) {[m
         this.numero = numero;[m
     }[m
 [m
[36m@@ -59,7 +72,7 @@[m [mpublic class Cliente {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Cliente{" + "nombre=" + nombre + ", correo=" + correo + ", numero=" + numero + ", contrasenia=" + contrasenia + '}';[m
[32m+[m[32m        return "LogicaNegocio.Cliente{" + "nombre=" + nombre + ", correo=" + correo + ", numero=" + numero + ", contrasenia=" + contrasenia + '}';[m
     }[m
 [m
     /**[m
[36m@@ -70,7 +83,7 @@[m [mpublic class Cliente {[m
      * @param contrasenia: contrasen√±a del cliente[m
      */[m
 [m
[31m-    public void registarCliente(String nombre, String correo, long numero, String contrasenia){[m
[32m+[m[32m    public void registarCliente(String nombre, String correo, String numero, String contrasenia){[m
 [m
     }[m
     /**[m
[1mdiff --git a/src/LogicaNegocio/Empleado.java b/src/LogicaNegocio/Empleado.java[m
[1mindex 266560d..0b22239 100644[m
[1m--- a/src/LogicaNegocio/Empleado.java[m
[1m+++ b/src/LogicaNegocio/Empleado.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public class Empleado {[m
     private int idempleado;[m
     private String nombre;[m
[36m@@ -45,7 +47,7 @@[m [mpublic class Empleado {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Empleado{" + "idempleado=" + idempleado + ", nombre=" + nombre + ", permiso=" + permiso + ", rol=" + rol + '}';[m
[32m+[m[32m        return "LogicaNegocio.Empleado{" + "idempleado=" + idempleado + ", nombre=" + nombre + ", permiso=" + permiso + ", rol=" + rol + '}';[m
     }[m
 [m
 [m
[1mdiff --git a/src/LogicaNegocio/Estado.java b/src/LogicaNegocio/Estado.java[m
[1mindex 33a2139..324c45c 100644[m
[1m--- a/src/LogicaNegocio/Estado.java[m
[1m+++ b/src/LogicaNegocio/Estado.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public enum Estado {[m
     RESERVADA, NO_ASISTIO, FINALIZADA, CANCELADA, MODIFICADA, EN_CURSO;[m
 }[m
[1mdiff --git a/src/LogicaNegocio/Evento.java b/src/LogicaNegocio/Evento.java[m
[1mindex f8e9d0b..11fc7d7 100644[m
[1m--- a/src/LogicaNegocio/Evento.java[m
[1m+++ b/src/LogicaNegocio/Evento.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public class Evento {[m
     private String nombre;[m
     private int fecha;[m
[36m@@ -55,7 +57,7 @@[m [mpublic class Evento {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Evento{" + "nombre=" + nombre + ", fecha=" + fecha + ", horainicio=" + horainicio + ", horafinal=" + horafinal + ", tipo_evento=" + tipo_evento + '}';[m
[32m+[m[32m        return "LogicaNegocio.Evento{" + "nombre=" + nombre + ", fecha=" + fecha + ", horainicio=" + horainicio + ", horafinal=" + horafinal + ", tipo_evento=" + tipo_evento + '}';[m
     }[m
 [m
 [m
[1mdiff --git a/src/LogicaNegocio/Formato.java b/src/LogicaNegocio/Formato.java[m
[1mindex ab2d079..cecfaf8 100644[m
[1m--- a/src/LogicaNegocio/Formato.java[m
[1m+++ b/src/LogicaNegocio/Formato.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public enum Formato {[m
     PDF, EXCEL;[m
 }[m
[1mdiff --git a/src/LogicaNegocio/MailAutomatico.java b/src/LogicaNegocio/MailAutomatico.java[m
[1mindex beb0b95..11eca8b 100644[m
[1m--- a/src/LogicaNegocio/MailAutomatico.java[m
[1m+++ b/src/LogicaNegocio/MailAutomatico.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 import java.time.LocalDateTime;[m
 [m
 public class MailAutomatico {[m
[1mdiff --git a/src/LogicaNegocio/Main.java b/src/LogicaNegocio/Main.java[m
[1mindex a7884b8..ffb609a 100644[m
[1m--- a/src/LogicaNegocio/Main.java[m
[1m+++ b/src/LogicaNegocio/Main.java[m
[36m@@ -1,5 +1,18 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m[32mimport InterfacesGraficas.VentanaRegistrarReserva;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.time.LocalTime;[m
[32m+[m
 public class Main {[m
     public static void main(String[] args) {[m
[32m+[m[32m        //Integer idReserva, LocalDate fecha, LocalTime horaInicio, String comentarios, LocalTime horaFinal, Estado estado, Cliente cliente,[m
[32m+[m[32m        Cliente cliente = new Cliente("Pablo Rd", "pablitoelmaskpito123@gmail.com", "123132", "lucasmireamor2");[m
[32m+[m[32m        Mesa mesa = new Mesa(13, "Platea", 4);[m
[32m+[m[32m        Reserva reserva = new Reserva(1234, LocalDate.of(2024, 10, 13), LocalTime.of(13, 0), "Sin comentarios",  LocalTime.of(15, 0), Estado.RESERVADA, cliente, mesa);[m
         System.out.println("TALLER  GRUPO 6");[m
[32m+[m[32m        VentanaRegistrarReserva ventana = new VentanaRegistrarReserva(reserva);[m
[32m+[m[32m        ventana.setVisible(true);[m
[32m+[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/LogicaNegocio/Mesa.java b/src/LogicaNegocio/Mesa.java[m
[1mindex f5cc869..327b2d5 100644[m
[1m--- a/src/LogicaNegocio/Mesa.java[m
[1m+++ b/src/LogicaNegocio/Mesa.java[m
[36m@@ -1,9 +1,11 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 import java.time.LocalDate;[m
 import java.time.LocalTime;[m
 import java.util.ArrayList;[m
 public class Mesa {[m
     private Integer numMesa;[m
[31m-    private Integer ubicacion;[m
[32m+[m[32m    private String ubicacion;[m
     private Integer capacidad;[m
     private ArrayList<Reserva> listaReservas;[m
 [m
[36m@@ -11,34 +13,40 @@[m [mpublic class Mesa {[m
         this.listaReservas =  new ArrayList<Reserva>();[m
     }[m
 [m
[31m-    public Mesa(Integer numMesa, Integer ubicacion, Integer capacidad, ArrayList<Reserva>listaReservas) {[m
[32m+[m[32m    public Mesa(Integer numMesa, String ubicacion, Integer capacidad, ArrayList<Reserva>listaReservas) {[m
         this.numMesa = numMesa;[m
         this.ubicacion = ubicacion;[m
         this.capacidad = capacidad;[m
         this.listaReservas = listaReservas;[m
     }[m
 [m
[31m-    public int getNumMesa() {[m
[32m+[m[32m    public Mesa(Integer numMesa, String ubicacion, Integer capacidad) {[m
[32m+[m[32m        this.numMesa = numMesa;[m
[32m+[m[32m        this.ubicacion = ubicacion;[m
[32m+[m[32m        this.capacidad = capacidad;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Integer getNumMesa() {[m
         return numMesa;[m
     }[m
 [m
[31m-    public void setNumMesa(int numMesa) {[m
[32m+[m[32m    public void setNumMesa(Integer numMesa) {[m
         this.numMesa = numMesa;[m
     }[m
 [m
[31m-    public int getUbicacion() {[m
[32m+[m[32m    public String getUbicacion() {[m
         return ubicacion;[m
     }[m
 [m
[31m-    public void setUbicacion(int ubicacion) {[m
[32m+[m[32m    public void setUbicacion(String ubicacion) {[m
         this.ubicacion = ubicacion;[m
     }[m
 [m
[31m-    public int getCapacidad() {[m
[32m+[m[32m    public Integer getCapacidad() {[m
         return capacidad;[m
     }[m
 [m
[31m-    public void setCapacidad(int capacidad) {[m
[32m+[m[32m    public void setCapacidad(Integer capacidad) {[m
         this.capacidad = capacidad;[m
     }[m
 [m
[36m@@ -53,7 +61,7 @@[m [mpublic class Mesa {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Mesa{" + "numMesa=" + numMesa + ", ubicacion=" + ubicacion + ", capacidad=" + capacidad + '}';[m
[32m+[m[32m        return "LogicaNegocio.Mesa{" + "numMesa=" + numMesa + ", ubicacion=" + ubicacion + ", capacidad=" + capacidad + '}';[m
     }[m
 [m
     /**[m
[1mdiff --git a/src/LogicaNegocio/Pago.java b/src/LogicaNegocio/Pago.java[m
[1mindex dd660be..99c33a8 100644[m
[1m--- a/src/LogicaNegocio/Pago.java[m
[1m+++ b/src/LogicaNegocio/Pago.java[m
[36m@@ -1,9 +1,11 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public class Pago {[m
     private double monto;[m
     private int fecha;[m
[31m-    private TarjetaCredi tarjeta;[m
[32m+[m[32m    private TarjetaCredito tarjeta;[m
 [m
[31m-    public Pago(double monto, int fecha, TarjetaCredi tarjeta) {[m
[32m+[m[32m    public Pago(double monto, int fecha, TarjetaCredito tarjeta) {[m
         this.monto = monto;[m
         this.fecha = fecha;[m
         this.tarjeta = tarjeta;[m
[36m@@ -25,17 +27,17 @@[m [mpublic class Pago {[m
         this.fecha = fecha;[m
     }[m
 [m
[31m-    public TarjetaCredi getTarjeta() {[m
[32m+[m[32m    public TarjetaCredito getTarjeta() {[m
         return tarjeta;[m
     }[m
 [m
[31m-    public void setTarjeta(TarjetaCredi tarjeta) {[m
[32m+[m[32m    public void setTarjeta(TarjetaCredito tarjeta) {[m
         this.tarjeta = tarjeta;[m
     }[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Pago{" + "monto=" + monto + ", fecha=" + fecha + ", tarjeta=" + tarjeta + '}';[m
[32m+[m[32m        return "LogicaNegocio.Pago{" + "monto=" + monto + ", fecha=" + fecha + ", tarjeta=" + tarjeta + '}';[m
     }[m
 [m
 [m
[1mdiff --git a/src/LogicaNegocio/Permiso.java b/src/LogicaNegocio/Permiso.java[m
[1mindex 1b96456..6904df9 100644[m
[1m--- a/src/LogicaNegocio/Permiso.java[m
[1m+++ b/src/LogicaNegocio/Permiso.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public enum Permiso {[m
     BAJO, MEDIO, ALTO;[m
 }[m
[1mdiff --git a/src/LogicaNegocio/Reporte.java b/src/LogicaNegocio/Reporte.java[m
[1mindex eaaa445..9467379 100644[m
[1m--- a/src/LogicaNegocio/Reporte.java[m
[1m+++ b/src/LogicaNegocio/Reporte.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public class Reporte {[m
     private String repototal;[m
     private Formato formato;[m
[36m@@ -25,7 +27,7 @@[m [mpublic class Reporte {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Reporte{" + "repototal=" + repototal + ", formato=" + formato + '}';[m
[32m+[m[32m        return "LogicaNegocio.Reporte{" + "repototal=" + repototal + ", formato=" + formato + '}';[m
     }[m
 [m
 [m
[1mdiff --git a/src/LogicaNegocio/Reserva.java b/src/LogicaNegocio/Reserva.java[m
[1mindex f33852b..2d2eac6 100644[m
[1m--- a/src/LogicaNegocio/Reserva.java[m
[1m+++ b/src/LogicaNegocio/Reserva.java[m
[36m@@ -1,10 +1,9 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 import java.time.LocalDate;[m
 import java.time.LocalTime;[m
 import java.util.ArrayList;[m
[31m-import javax.swing.*;[m
[31m-import java.awt.event.ActionEvent;[m
[31m-import java.awt.*;[m
[31m-import java.awt.event.ActionListener;[m
[32m+[m
 public class Reserva {[m
     private Integer idReserva;[m
     private LocalDate fecha;[m
[36m@@ -14,9 +13,12 @@[m [mpublic class Reserva {[m
     private Estado estado;[m
     private Cliente cliente;[m
     private Mesa mesa;[m
[32m+[m[32m    private static ArrayList<Reserva> listaDeReservas = new ArrayList<>();[m
[32m+[m[32m    private static int contadorReservas = 0; // Contador est√°tico para generar ID √∫nicos[m
[32m+[m
 [m
     public Reserva(Integer idReserva, LocalDate fecha, LocalTime horaInicio, String comentarios, LocalTime horaFinal, Estado estado, Cliente cliente, Mesa mesa) {[m
[31m-        this.idReserva = idReserva;[m
[32m+[m[32m        this.idReserva = ++contadorReservas;[m
         this.fecha = fecha;[m
         this.horaInicio = horaInicio;[m
         this.comentarios = comentarios;[m
[36m@@ -92,10 +94,14 @@[m [mpublic class Reserva {[m
         this.mesa = mesa;[m
     }[m
 [m
[32m+[m[32m    public ArrayList<Reserva> getListaDeReservas(){return listaDeReservas;}[m
[32m+[m
[32m+[m[32m    public static int getContadorReservas() {   return contadorReservas;}[m
[32m+[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "Reserva{" +[m
[32m+[m[32m        return "LogicaNegocio.Reserva{" +[m
                 "cliente=" + cliente +[m
                 ", idReserva=" + idReserva +[m
                 ", fecha=" + fecha +[m
[36m@@ -115,8 +121,22 @@[m [mpublic class Reserva {[m
      * @param horaInicio: comienzo de la reserva[m
      * @param mesa: informacion de la mesa(n√∫mero, ubicaci√≥n y capacidad)[m
      */[m
[31m-    public void realizarReserva(Cliente cliente, LocalDate dia, LocalTime horaInicio, Mesa mesa){[m
[31m-[m
[32m+[m[32m    public void realizarReserva(Cliente cliente, LocalDate dia, LocalTime horaInicio, Mesa mesa, String comentarios){[m
[32m+[m[32m        if (cliente == null){[m
[32m+[m[32m            throw new IllegalArgumentException("El cliente no puede ser nulo");[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!getMesa().consultarDisponibilidad(mesa, dia, horaInicio)){[m
[32m+[m[32m            System.out.println("La mesa"+ mesa.getNumMesa() + "no se encuentra disponible para el d√≠a "+ dia + " a las"+  horaInicio);[m
[32m+[m[32m            return; //EN REALIDAD VA UNA EXCEPCION[m
[32m+[m[32m        }[m
[32m+[m[32m        Reserva nuevaReserva = new Reserva(idReserva, dia, horaInicio, comentarios, null, Estado.RESERVADA, cliente, mesa);[m
[32m+[m[32m        listaDeReservas.add(nuevaReserva);[m
[32m+[m[32m        System.out.println("La reserva se realiz√≥ con √©xito.");[m
[32m+[m[32m        System.out.println("Nombre: "+ cliente.getNombre());[m
[32m+[m[32m        System.out.println("Mesa: "+ mesa.getNumMesa());[m
[32m+[m[32m        System.out.println("D√≠a: "+ dia);[m
[32m+[m[32m        System.out.println("Hora: "+ horaInicio);[m
[32m+[m[32m        System.out.println("N√∫mero de identificaci√≥n de la reserva: "+ idReserva);[m
     }[m
 [m
     /**[m
[36m@@ -134,9 +154,7 @@[m [mpublic class Reserva {[m
      * @param idReserva: n√∫mero de indentificaci√≥n de la reserva[m
      * @param cliente: cliente que cancela[m
      */[m
[31m-    public void cancelarReserva(Integer idReserva, Cliente cliente, Mesa mesa){[m
[31m-[m
[31m-    }[m
[32m+[m[32m    public void cancelarReserva(Integer idReserva, Cliente cliente, Mesa mesa){}[m
 [m
     /**[m
      * filtrarMesa: filtra las mesas basandose en su capacidad y ubicaci√≥n[m
[36m@@ -156,4 +174,11 @@[m [mpublic class Reserva {[m
     public String realizarComentario(){[m
         return "";[m
     }[m
[32m+[m
[32m+[m[32m    //Puede ser:[m
[32m+[m[32m    private boolean verificarHorario(LocalDate dia, LocalTime horaInicio) {[m
[32m+[m[32m     return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    //IDEA DE LUCAS DE QUE PUEDE HABER UN M√âTODO QUE VERIFIQUE SI LOS HORARIOS QUE EL CLIENTE SELECCIONA PARA LA RESERVA[m
[32m+[m[32m    //ESTEN DENTRO DE LOS HORARIOS EN LOS QUE EL RESTAURANTE TRABAJA O SE HAGA LA RESERVA 24HS ANTES.[m
 }[m
[1mdiff --git a/src/LogicaNegocio/Rol.java b/src/LogicaNegocio/Rol.java[m
[1mindex 8ffaf77..cdd8588 100644[m
[1m--- a/src/LogicaNegocio/Rol.java[m
[1m+++ b/src/LogicaNegocio/Rol.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public enum Rol {[m
     Mesero, Maitre, Recepcionista;[m
 }[m
[1mdiff --git a/src/LogicaNegocio/TarjetaCredito.java b/src/LogicaNegocio/TarjetaCredito.java[m
[1mindex 17908c5..19d2f35 100644[m
[1m--- a/src/LogicaNegocio/TarjetaCredito.java[m
[1m+++ b/src/LogicaNegocio/TarjetaCredito.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public class TarjetaCredito {[m
     private String nombre;[m
     private String emisor;[m
[36m@@ -45,7 +47,7 @@[m [mpublic class TarjetaCredito {[m
 [m
     @Override[m
     public String toString() {[m
[31m-        return "TarjetaCredito{" + "nombre=" + nombre + ", emisor=" + emisor + ", numerotarje=" + numerotarje + ", codverificacion=" + codverificacion + '}';[m
[32m+[m[32m        return "LogicaNegocio.TarjetaCredito{" + "nombre=" + nombre + ", emisor=" + emisor + ", numerotarje=" + numerotarje + ", codverificacion=" + codverificacion + '}';[m
     }[m
 [m
 [m
[1mdiff --git a/src/LogicaNegocio/TipoDeDia.java b/src/LogicaNegocio/TipoDeDia.java[m
[1mindex 2eb851d..a3ff4e0 100644[m
[1m--- a/src/LogicaNegocio/TipoDeDia.java[m
[1m+++ b/src/LogicaNegocio/TipoDeDia.java[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mpackage LogicaNegocio;[m
[32m+[m
 public enum TipoDeDia {[m
     Feriado, EventoPrivado, Normal, CambioInesperado;[m
 }[m
